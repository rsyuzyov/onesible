#Область ЗаписьЧтениеСостояний

Функция Назначить(Знач Компьютер, Знач Роль) Экспорт
	
	Запись = СоздатьЗапись(Компьютер, Роль);
	Запись.Назначена = Истина;
	ЗакрытьЗапись(Запись);
	
КонецФункции

Функция Снять(Знач Компьютер, Знач Роль) Экспорт
	
	Запись = СоздатьЗапись(Компьютер, Роль);
	Запись.Назначена = Истина;
	ЗакрытьЗапись(Запись);
	
КонецФункции

Функция Установить(Знач Компьютер, Знач Роль, ПараметрыОперации = Неопределено) Экспорт
	
	Запись = СоздатьЗапись(Компьютер, Роль, "УстановитьРоль");
	
	Результат = ПолучитьМенеджерРоли(Роль);
	Если НЕ Результат.КодВозврата = 0 Тогда
		ЗакрытьЗапись(Запись, Ложь, Истина, Результат.ОписаниеОшибки, Результат.Лог);
		Возврат Результат;
	КонецЕсли;
	МенеджерРоли = Результат.МенеджерРоли;
	МенеджерРоли.Компьютер = Компьютер;
	
	Результат = Проверить(Компьютер, Роль, Ложь);
	Если Результат.КодВозврата = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	ЗакрытьЗапись(Запись, Истина, Ложь, "", "");
	Результат = МенеджерРоли.УстановитьРоль(Компьютер, ПараметрыОперации);
	Если НЕ Результат.КодВозврата = 0 Тогда
		ЗакрытьЗапись(Запись, Ложь, Истина, Результат.ОписаниеОшибки, Результат.Лог);
		Возврат Результат;
	КонецЕсли;
	
	Результат = Проверить(Компьютер, Роль, Ложь);
	
	Возврат Результат;
	
КонецФункции

Функция Удалить(Знач Компьютер, Знач Роль, ПараметрыОперации = Неопределено) Экспорт
	
	Возврат ВыполнитьОперацию(Компьютер, Роль, "УдалитьРоль", ПараметрыОперации);
		
КонецФункции

Функция Проверить(Знач Компьютер, Знач Роль, ИспользоватьКэш = Истина) Экспорт

	Если ИспользоватьКэш Тогда
		Возврат Результат(0, РегистрыСведений.РолиКомпьютеров.Состояние(Компьютер, Роль));
	КонецЕсли;
	
	Возврат ВыполнитьОперацию(Компьютер, Роль, "ПроверитьРоль");
	
КонецФункции

Функция НачатьВыполнениеОперации(Знач Компьютер, Знач Роль, Знач Операция, ПараметрыОперации = Неопределено) Экспорт
	
	Если ПараметрыСеанса.РежимОтладки Тогда
		ВыполнитьОперацию(Компьютер, Роль, Операция, ПараметрыОперации);
		Возврат Истина;
	КонецЕсли;
	
	Ключ = ФоновоеВыполнение.КлючЗадания(Компьютер, Роль, Операция);
	Если ФоновоеВыполнение.НайтиАктивноеЗаданиеПоКлючу(Ключ) = Неопределено Тогда
		ПараметрыЗадания = Новый Массив;
		ПараметрыЗадания.Добавить(Компьютер);
		ПараметрыЗадания.Добавить(Роль);
		ПараметрыЗадания.Добавить(Операция);
		ПараметрыЗадания.Добавить(ПараметрыОперации);
		ФоновыеЗадания.Выполнить("ФоновоеВыполнение.ВыполнитьОперацию", ПараметрыЗадания, Ключ, Ключ);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ВыполнитьОперацию(Знач Компьютер, Знач Роль, Знач Операция, Знач ПараметрыОперации = Неопределено) Экспорт
	
	Запись = СоздатьЗапись(Компьютер, Роль, Операция);
	
	Результат = ПолучитьМенеджерРоли(Роль);
	Если НЕ Результат.КодВозврата = 0 Тогда
		ЗакрытьЗапись(Запись, Ложь, Истина, Результат.ОписаниеОшибки, Результат.Лог);
		Возврат Результат;
	КонецЕсли;
	
	МенеджерРоли = Результат.МенеджерРоли;
	МенеджерРоли.Компьютер = Компьютер;
	МенеджерРоли.Операция = Операция;
	Если НЕ ПараметрыОперации = Неопределено Тогда
		Для каждого ПараметрОперации Из ПараметрыОперации Цикл
			НовыйПараметр = МенеджерРоли.ПараметрыОперации.Добавить();
			НовыйПараметр.Ключ = ПараметрОперации.Ключ;
			НовыйПараметр.Значение = ПараметрОперации.Значение;
		КонецЦикла;
	КонецЕсли;
	
	Результат = Вычислить(СтрШаблон("МенеджерРоли.%1()", Операция));
	Если НЕ Результат.КодВозврата = 0 Тогда
		ЗакрытьЗапись(Запись, Ложь, Истина, Результат.ОписаниеОшибки, Результат.Лог);
		Возврат Результат;
	КонецЕсли;
	
	ЗакрытьЗапись(Запись, Истина, Ложь, Результат.ОписаниеОшибки, Результат.Лог);
	
	Возврат Результат;
	
КонецФункции


Функция СоздатьЗапись(Компьютер, Знач Роль, ВыполняемаяОперация = Неопределено) 

	Роль = Роль(Роль);
	
	Запись = СоздатьМенеджерЗаписи();
	Запись.Компьютер = Компьютер;
	Запись.Роль = Роль;
	Запись.Прочитать();
	Если НЕ Запись.Выбран() Тогда
		Запись.Активность = Истина;
		Запись.Компьютер = Компьютер;
		Запись.Роль = Роль;
	КонецЕсли;
	
	Если НЕ ВыполняемаяОперация = Неопределено Тогда
		Запись.ВыполняемаяОперация = ВыполняемаяОперация;
	КонецЕсли;
	
	Возврат Запись;
	
КонецФункции

Функция ЗакрытьЗапись(Запись, ВыполняетсяСейчас = Неопределено, ЕстьОшибки = Неопределено, ОписаниеОшибки = Неопределено, Лог = Неопределено)

	Запись.ДатаОбновления = ТекущаяДата();
	Если НЕ ВыполняетсяСейчас = Неопределено Тогда
		Запись.ВыполняетсяСейчас = ВыполняетсяСейчас;
	КонецЕсли;
	Если НЕ ЕстьОшибки = Неопределено Тогда
		Запись.ЕстьОшибки = ЕстьОшибки;
	КонецЕсли;
	Если НЕ ОписаниеОшибки = Неопределено Тогда
		Запись.ОписаниеОшибки = ОписаниеОшибки;
	КонецЕсли;
	Если НЕ Лог = Неопределено Тогда
		Запись.Лог = Лог;
	КонецЕсли;
	Запись.Записать();

КонецФункции // ()

Функция Состояние(Компьютер, Знач Роль) Экспорт

	Роль = Роль(Роль);
	
	Набор = СоздатьНаборЗаписей();
	Набор.Отбор.Компьютер.Установить(Компьютер, Истина);
	Набор.Отбор.Роль.Установить(Роль, Истина);
	Набор.Прочитать();
	Если Набор.Количество() = 0 Тогда
		Запись = Набор.Добавить();
	Иначе
		Запись = Набор[0];
	КонецЕсли;
	
	Результат = Новый Структура("Назначена, Установлена, ЕстьОшибки, ВыполняемаяОперация, ВыполняетсяСейчас, ДатаОбновления, ОписаниеОшибки, Лог");
	ЗаполнитьЗначенияСвойств(Результат, Запись);
	
	Возврат Результат;

КонецФункции


Функция ОбновитьДляКомпьютера(Знач Компьютер) Экспорт
	
	Набор = СоздатьНаборЗаписей();
	Набор.Отбор.Компьютер.Установить(Компьютер, Истина);
	Набор.Прочитать();
	тз = Набор.Выгрузить();
	ВсеРоли = ВсеРоли();
	Для каждого Роль Из ВсеРоли Цикл
		Если тз.Найти(Роль, "Роль") = Неопределено Тогда
			Запись = Набор.Добавить();
			Запись.Активность = Истина;
			Запись.Компьютер = Компьютер;
			Запись.Роль = Роль;
			Запись.Назначена = Ложь;
			Запись.Установлена = Ложь;
		КонецЕсли;
	КонецЦикла;
	Набор.Записать();

КонецФункции // ()

Функция ОбновитьДляРоли(Знач Роль) Экспорт
	
	Роль = Роль(Роль);
	
	Набор = СоздатьНаборЗаписей();
	Набор.Отбор.Роль.Установить(Роль, Истина);
	Набор.Прочитать();
	тз = Набор.Выгрузить();
	ВсеКомпьютеры = ВсеКомпьютеры();
	Для каждого Компьютер Из ВсеКомпьютеры Цикл
		Если тз.Найти(Компьютер, "Компьютер") = Неопределено Тогда
			Запись = Набор.Добавить();
			Запись.Активность = Истина;
			Запись.Компьютер = Компьютер;
			Запись.Роль = Роль;
			Запись.Назначена = Ложь;
			Запись.Установлена = Ложь;
		КонецЕсли;
	КонецЦикла;
	Набор.Записать();

КонецФункции

#КонецОбласти


#Область СлужебныеМетоды

Функция ВсеРоли() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РолиКомпьютеров.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.РолиКомпьютеров КАК РолиКомпьютеров";
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");

КонецФункции

Функция ВсеКомпьютеры() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Компьютеры.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Компьютеры КАК Компьютеры";
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");

КонецФункции

Функция Роль(Роль) Экспорт

	Если Роль = Неопределено Тогда
		Возврат Справочники.РолиКомпьютеров.ПустаяСсылка();
	ИначеЕсли ТипЗнч(Роль) = Тип("Строка") Тогда
		Если ПустаяСтрока(Роль) Тогда
			Возврат Справочники.РолиКомпьютеров.ПустаяСсылка();
		Иначе
			Возврат Справочники.РолиКомпьютеров.НайтиПоНаименованию(Роль);
		КонецЕсли;
	ИначеЕсли НЕ ТипЗнч(Роль) = Тип("СправочникСсылка.РолиКомпьютеров") ИЛИ Роль.Пустая() Тогда
		ВызватьИсключение "Не удалось найти роль: " + Роль;
	КонецЕсли;
	
	Возврат Роль;
	
КонецФункции // ()


Функция ПолучитьМенеджерРоли(Знач Роль) Экспорт

	Роль = Роль(Роль);
	
	ИмяФайлаМенеджера = СтрШаблон("%1role-managers\RoleManager%2.epf", КаталогВнешнихДанных(), Роль.Наименование);
	
	Если ФайловаяСистема.ФайлСуществует(ИмяФайлаМенеджера) Тогда
		МенеджерРоли = ВнешниеОбработки.Создать(ИмяФайлаМенеджера, Ложь);
	Иначе
		ИмяОбработки = "МенеджерРоли" + Роль.Наименование;
		Попытка
			МенеджерРоли = Вычислить(СтрШаблон("Обработки.%1.Создать()", ИмяОбработки));
		Исключение
			ОписаниеОшибки = СтрШаблон("Не найден менеджер для роли (файл ""%1"" не существует, обработка ""%2"" в конфигурации не найдена)", ИмяФайлаМенеджера, );
			Возврат Результат(1, ОписаниеОшибки);
		КонецПопытки;
	КонецЕсли;
	
	
	Результат = Результат(0);
	Результат.Вставить("МенеджерРоли", МенеджерРоли);
	
	Возврат Результат;

КонецФункции // ()

Функция ПараметрОперации(ПараметрыОперации, ИмяПараметра)

	Для каждого ПараметрОперации Из ПараметрыОперации Цикл
		Если НРег(СокрЛП(ПараметрОперации.Ключ)) = НРег(СокрЛП(ИмяПараметра)) Тогда
			Возврат ПараметрОперации.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Возврат "";

КонецФункции

Функция Идентификатор(Компьютер) Экспорт

	Возврат Справочники.Компьютеры.Идентификатор(Компьютер);

КонецФункции

Функция НайтиПоИдентификатру(Идентификатор)  Экспорт

	Возврат Справочники.Компьютеры.НайтиПоИдентификатру(Идентификатор);

КонецФункции // ()


#КонецОбласти