&НаСервере
Процедура ОбменНаСервере(ТекущаяСтрока)

	Узел = ТекущаяСтрока.Узел;
	
	Если Узел = Объект.ПланОбмена.ГлавныйУзел Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		Результат = КоннекторHTTP.GetJson(Узел.ПолучитьОбъект().Адрес() + "ping");
	Исключение
		Результат = ОписаниеОшибки();
	КонецПопытки;
	
	Если Результат = "Pong" Тогда
		Фастекс.ВыполнитьОбмен(Объект.ПланОбмена, Объект.ПланОбмена.ГлавныйУзел, Узел);
		Фастекс.ВыполнитьОбмен(Объект.ПланОбмена, Узел, Объект.ПланОбмена.ГлавныйУзел);

	Иначе
		Если ПустаяСтрока(Результат) Тогда
			Попытка
				Результат = КоннекторHTTP.Get(Узел.ПолучитьОбъект().Адрес() + "ping");
				Если Результат.КодСостояния = 404 Тогда
					Результат = "Запрашиваемый ресурс не найден";
				КонецЕсли;
			Исключение
				Результат = ОписаниеОшибки();
			КонецПопытки;
		КонецЕсли;
		
		Сообщить("" + Узел.Код + ": не удалось подключиться к ИБ: " + Результат);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Обмен(Команда)
	
	Для каждого ТекущаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		ОбменНаСервере(ТекущаяСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура PingНаСервере(ТекущаяСтрока)
	
	Узел = ТекущаяСтрока.Узел;
	Попытка
		ДополнительныеПараметры = Новый Структура("Таймаут", 3);
		Результат = КоннекторHTTP.GetJson(Узел.ПолучитьОбъект().Адрес() + "ping", , ДополнительныеПараметры);
		
		Если НРег(Результат) = "pong" Тогда
			Сообщить("" + Узел.Код +  ": ОК. Команда: " + Узел.ПолучитьОбъект().Адрес() + "ping");
		Иначе
			Сообщить("=====");
			Сообщить("   " + Узел.Код + ": не удалось проверить доступность. Команда проверки: ");
			Сообщить("   " + Узел.ПолучитьОбъект().Адрес() + "ping");
			Сообщить("   Ошибка: " + Результат);
			Сообщить("=====");
		КонецЕсли;
		
	Исключение
		Сообщить("=====");
		Сообщить("   " + Узел.Код + ": не удалось проверить доступность. Команда проверки: ");
		Сообщить("   " + Узел.ПолучитьОбъект().Адрес() + "ping");
		Сообщить("   Ошибка: " + ОписаниеОшибки());
		Сообщить("=====");
		
	КонецПопытки;
	
	ПараметрыЗадания = Новый Массив;
	ПараметрыЗадания.Добавить(Узел);
	ФоновыеЗадания.Выполнить("Фастекс.ОбновитьДанныеУзла", ПараметрыЗадания);
	
КонецПроцедуры

&НаКлиенте
Процедура Ping(Команда)
	
	Для каждого ТекущаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		PingНаСервере(ТекущаяСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставОчереди(Команда)
	
	ОткрытьФорму("Обработка.СоставОчереди.Форма.Форма", Новый Структура("ПланОбмена, Узел", Объект.ПланОбмена, Элементы.Список.ТекущиеДанные.Узел));
	
КонецПроцедуры

&НаСервере
Функция ГлавныйУзел()

	Возврат Объект.ПланОбмена.ГлавныйУзел;

КонецФункции

&НаКлиенте
Процедура НастройкаКонвертации(Команда)
	
	ТекущаяФорма = ПолучитьФорму("Обработка.НастройкаКонвертации.Форма.Форма");
	ТекущаяФорма.Объект.ПланОбмена = Объект.ПланОбмена;
	ТекущаяФорма.Узел1 = ГлавныйУзел();
	ТекущаяФорма.Узел2 = Элементы.Список.ТекущиеДанные.Узел;
	ТекущаяФорма.Открыть();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКодНаСервере(ТекущаяСтрока, Скрипт)
	
	Результат = Фастекс.ВыполнитьКод(ТекущаяСтрока.Узел, Скрипт);
	Сообщить("" + ТекущаяСтрока.Узел.Код + ": " + Результат);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьРасширениеНаСервере(ТекущаяСтрока)
	
	ПараметрыЗадания = Новый Массив;
	ПараметрыЗадания.Добавить(ТекущаяСтрока.Узел);
	ФоновыеЗадания.Выполнить("Фастекс.ОбновитьРасширение", ПараметрыЗадания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьFastex(Команда)
	
	Для каждого ТекущаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		ОбновитьРасширениеНаСервере(ТекущаяСтрока);
	КонецЦикла;
	Сообщить("Обновление Fastex запущено в фоновом режиме");
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Список.Параметры.УстановитьЗначениеПараметра("Фастекс", Справочники.Расширения.НайтиПоНаименованию("Fastex"));
	Список.Параметры.УстановитьЗначениеПараметра("Дополнения", Справочники.Расширения.НайтиПоНаименованию("Дополнения"));
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДополненияНаСервере(ТекущаяСтрока)
	
	Узел = ТекущаяСтрока.Узел;
	
	Попытка
		Если Число(Узел.Версия) < 100 Тогда
			ИмяФайла = "\\192.168.20.18\public\cfe\retail\Дополнения99.cfe";
		Иначе
			ИмяФайла = "\\192.168.20.18\public\cfe\retail\Дополнения100.cfe";
		КонецЕсли;
	Исключение
		Сообщить("" + Узел.Код + ": " + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ИмяФайла);
	ДвоичныеДанныеBase64 = Base64Строка(ДвоичныеДанные);
	
	ПараметрыЗадания = Новый Массив;
	ПараметрыЗадания.Добавить(Узел);
	ПараметрыЗадания.Добавить(ДвоичныеДанныеBase64);
	ПараметрыЗадания.Добавить("Дополнения");
	ФоновыеЗадания.Выполнить("Фастекс.ОбновитьРасширение", ПараметрыЗадания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДополнения(Команда)
	
	Для каждого ТекущаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		ОбновитьДополненияНаСервере(ТекущаяСтрока);
	КонецЦикла;
	Сообщить("Обновление Дополнений запущено в фоновом режиме");
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКоличествоОшибокВыгрузкиНажатие(Элемент, СтандартнаяОбработка)
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "СписокКоличествоОшибокВыгрузки" ИЛИ Поле.Имя = "СписокКоличествоОшибокЗагрузки" Тогда
		СтандартнаяОбработка = Ложь;
		ФормаЛога = ПолучитьФорму("РегистрСведений.ЛогОбмена.ФормаСписка");
		
		ЭлементОтбора = ФормаЛога.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Узел");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = Элементы.Список.ТекущиеДанные.Узел;
		
		ФормаЛога.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланОбменаПриИзменении(Элемент)
	
	Список.Параметры.УстановитьЗначениеПараметра("ПланОбмена", Объект.ПланОбмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Список.Параметры.УстановитьЗначениеПараметра("ПланОбмена", Объект.ПланОбмена);
	Список.Параметры.УстановитьЗначениеПараметра("Скрипт", Объект.Скрипт);

КонецПроцедуры

&НаСервере
Функция СтрокаЗапускаТонкогоКлиента(Знач Узел)

	Узел = Узел.ПолучитьОбъект();
	Результат = СтрШаблон("""C:\Program Files (x86)\1Cv8\common\1cestart.exe"" /WS %1 /N %2 /P %3 /DisableStartupMessages", Узел.Адрес(), Узел.Логин(), Узел.Пароль());
	Результат = СтрЗаменить(Результат, "hs/fastex/", "");
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура СписокУзелКомпьютерIP1Открытие(Элемент, СтандартнаяОбработка)

	Код = "";
	
	Попытка
		СтандартнаяОбработка = Ложь;
		Код = СтрокаЗапускаТонкогоКлиента(Элементы.Список.ТекущиеДанные.Узел);
		НачатьЗапускПриложения(Новый ОписаниеОповещения, Код);
		
	Исключение
		Сообщить("Ошибка подключения:");
		Сообщить(Код);
		Сообщить(ОписаниеОшибки());
		
	КонецПопытки;

КонецПроцедуры

&НаСервере
Функция ЭтоВнешняяОбработка()

	Возврат  СтрНайти(РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя(), "ВнешняяОбработка") > 0;

КонецФункции

&НаСервере
Функция ПолноеИмяМетаданных()

	Возврат  РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя();

КонецФункции

#Область Скрипты

&НаКлиенте
Процедура СкриптПриИзменении(Элемент)
	Список.Параметры.УстановитьЗначениеПараметра("Скрипт", Объект.Скрипт);
КонецПроцедуры

&НаСервере
Функция ПолучитьСкрипт(Идентификатор) Экспорт

	Возврат Справочники.Скрипты.НайтиПоРеквизиту("Идентификатор", Идентификатор).Текст;

КонецФункции

&НаКлиенте
Процедура ВыполнитьСкрипт(Команда)
	
	ЭтотСкрипт = Объект.Скрипт;
	Если ЭтотСкрипт.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнятьНаКлиенте = РеквизитОбъекта(ЭтотСкрипт, "ВыполнятьНаКлиенте");
	
	Для каждого ТекущаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		Если ВыполнятьНаКлиенте Тогда
			ВыполнитьСкриптНаКлиенте(ТекущаяСтрока, ЭтотСкрипт);
		Иначе
			ВыполнитьСкриптНаСервере(ТекущаяСтрока, ЭтотСкрипт);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьСкриптНаСервере(ТекущаяСтрока, Скрипт)
	
	Попытка
		Узел = ТекущаяСтрока.Узел;
		Компьютер = Узел.Компьютер;
		Выполнить(Скрипт.Текст);
		
	Исключение
		ЗаписатьСостояние(Узел, Скрипт, ОписаниеОшибки(), "ЗавершенСОшибкой");
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСкриптНаКлиенте(ТекущаяСтрока, Скрипт)
	
	Попытка
		Узел = РеквизитОбъекта(ТекущаяСтрока, "Узел");
		Компьютер = РеквизитОбъекта(Узел, "Компьютер");
		Выполнить(РеквизитОбъекта(Скрипт, "Текст"));
		
	Исключение
		ЗаписатьСостояние(Узел, Скрипт, ОписаниеОшибки(), "ЗавершенСОшибкой");
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РеквизитОбъекта(Объект, Реквизит)
	Возврат Вычислить("Объект." + Реквизит);
КонецФункции

&НаСервере
Процедура ЗаписатьСостояние(Узел, Скрипт, Информация = Неопределено, Состояние = Неопределено, Начало = Неопределено)

	Сообщить(Узел.Код + "; " + Информация);

КонецПроцедуры


#КонецОбласти