#Область ПрикладнойПрограммныйИнтерфейс

Функция ОпубликоватьБазу(Компьютер, ПараметрыПубликации) Экспорт
	
	Возврат УдаленноеУправление.ВыполнитьEpf(Компьютер, УдаленноеУправление.КаталогОбработок() + "Apache_ОпубликоватьБазу.epf");
	
КонецФункции

Функция ВключитьОбработчик1С(Компьютер, ПараметрыПубликации) Экспорт

	Возврат УдаленноеУправление.ВыполнитьEpf(Компьютер, УдаленноеУправление.КаталогОбработок() + "Apache_ВключитьОбработчик1С.epf");
	
КонецФункции

Функция ВключитьHTTPсервисыРасширений(Компьютер, ПараметрыПубликации) Экспорт

	Возврат УдаленноеУправление.ВыполнитьEpf(Компьютер, УдаленноеУправление.КаталогОбработок() + "Apache_ВключитьHTTPсервисыРасширений.epf");
	
КонецФункции

Функция ОстановитьСлужбу(Компьютер, ВходящиеПараметры = Неопределено) Экспорт

	КодКоманды = "
	|net stop ""Apache""
	|net stop ""Apache2.2""
	|net stop ""Apache2.4""
	|taskkill /IM httpd* /f
	|";
	Возврат УдаленноеУправление.ВыполнитьКомандуCMD(Компьютер, КодКоманды);

КонецФункции

Функция ЗапуститьСлужбу(Компьютер, ВходящиеПараметры = Неопределено) Экспорт

	КодКоманды = "
	|net start ""Apache""
	|net start ""Apache2.2""
	|net start ""Apache2.4""
	|";
	Возврат УдаленноеУправление.ВыполнитьКомандуCMD(Компьютер, КодКоманды);

КонецФункции

Функция ПерезапуститьСлужбу(Компьютер, ВходящиеПараметры = Неопределено) Экспорт

	ОстановитьСлужбу(Компьютер);
	Возврат ЗапуститьСлужбу(Компьютер);
	
КонецФункции

Функция СведенияОВебСервереИзЗаголовков(IP, Порт = 80) Экспорт

	Результат = Новый Структура("Имя, Версия, Разрядность, ОписаниеОшибки", "", "", "", "");
	
	Попытка
		Ответ = КоннекторHTTP.Get("http://" + IP + ":" + XMLСтрока(Порт));
		Описание = Ответ.Заголовки.Получить("Server");
		Позиция1 = СтрНайти(Описание, "/");
		Результат.Имя = Лев(Описание, Позиция1-1);
		Позиция2 = СтрНайти(Описание, " ", , Позиция1);
		Результат.Версия = Сред(Описание, Позиция1+1, Позиция2-Позиция1-1);
		Позиция1 = СтрНайти(Описание, "(");
		Позиция2 = СтрНайти(Описание, ")");
		Результат.Разрядность = Сред(Описание, Позиция1+1, Позиция2-Позиция1-1);
		
	Исключение
		Результат.ОписаниеОшибки = ОписаниеОшибки();
		
	КонецПопытки;

	Возврат Результат;
	
КонецФункции // ()

#КонецОбласти

#Область ОбщийПрограммныйИнтерфейс

Функция УстановитьРоль(Компьютер) Экспорт 

	//Логика установки роли
	Возврат Результат(1, "Не реализовано");
	
	Возврат Результат(0);
	
КонецФункции

Функция ПроверитьРоль(Компьютер, ИспользоватьКэш = Истина) Экспорт 

	Порт = РегистрыСведений.СвойстваКомпьютеров.ПолучитьСвойство(Компьютер, ЭтаРоль(), "Порт").Значение;
	Если ПустаяСтрока(Порт) Тогда
		МассивПортов = Новый Массив;
		МассивПортов.Добавить(80);
		МассивПортов.Добавить(5080);
		МассивПортов.Добавить(88);
		МассивПортов.Добавить(90);
	Иначе
		МассивПортов = Новый Массив;
		МассивПортов.Добавить(Порт);
	КонецЕсли;
		
		
	Для каждого Порт Из МассивПортов Цикл
		Параметры = СведенияОВебСервереИзЗаголовков(Компьютер.IP, Порт);
		Если НЕ ПустаяСтрока(Параметры.Имя) Тогда
			РегистрыСведений.СвойстваКомпьютеров.ЗаписатьСвойство(Компьютер, ЭтаРоль(), "Порт", Порт);
			Для каждого Параметр Из Параметры Цикл
				РегистрыСведений.СвойстваКомпьютеров.ЗаписатьСвойство(Компьютер, ЭтаРоль(), Параметр.Ключ, Параметр.Значение);
			КонецЦикла;
		КонецЕсли;
		
		Если НРег(Параметры.Имя) = "apache" Тогда
			Возврат Результат(0);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат(1, "Веб сервер не обнаружен");;

КонецФункции

Функция УдалитьРоль(Компьютер) Экспорт

	//Логика удаления роли
	Возврат Результат(1, "Не реализовано");
	
	Возврат Результат(0);

КонецФункции

#КонецОбласти

#Область СлужебныеМетоды

Функция ЭтаРоль()

	Результат = Метаданные().ПолноеИмя();
	Результат = Сред(Результат, СтрНайти(Результат, "МенеджерРоли") + 12);
	Возврат Результат;

КонецФункции

#КонецОбласти
