&НаСервере
Функция ПолучитьIP(Ссылка)

	Возврат Ссылка.Компьютер.IP;
	
КонецФункции

&НаСервере
Функция ПолучитьКод(Ссылка)

	Возврат СокрЛП(Ссылка.Магазин.Код);
	
КонецФункции

&НаСервере
Процедура ЗаписатьЭлемент(Ссылка, IP, ДоступенЧерезPsExec)

	об =  Ссылка.ПолучитьОбъект();
	об.ОбменДанными.Загрузка = Истина;
	об.IP = IP;
	об.ДоступенЧерезPsExec = ДоступенЧерезPsExec;
	об.Записать();

КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьУдаленно(Знач Адрес, Знач Команда, Интерактивно = Ложь, ОтИмениСистемы = Ложь, ПаузаПослеВыполнения = Ложь)

	Если ПаузаПослеВыполнения И НЕ ОтИмениСистемы Тогда
		Команда = Команда + "
		|pause"
	КонецЕсли;
	ИмяФайла = ПолучитьИмяВременногоФайла(".cmd");
	Запись = Новый ТекстовыйДокумент;
	Запись.УстановитьТекст(Команда);
	Запись.Записать(ИмяФайла, КодировкаТекста.OEM);
	
	//не всегда файл сразу доступен для чтения, нужно немного подождать
	Для х = 1 По 100 Цикл
		Попытка
			Файл = Новый Файл(ИмяФайла);
			Если Файл.Существует() Тогда
				Размер = Файл.Размер();
				Прервать;
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЦикла;
	
	КомандаPsExec = "c:\1c\psexec.exe \\" + Адрес +  ?(Интерактивно, " -i", "") + ?(ОтИмениСистемы, " -s", "") + " -h -u user -p 97315 -c " + ИмяФайла;
	Если НеЗакрыватьКонсольПослеВыполнения Тогда
		КомандаPsExec = КомандаPsExec + "
		|pause";
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла(".cmd");
		Текст = Новый ТекстовыйДокумент;
		Текст.УстановитьТекст(КомандаPsExec);
		Текст.Записать(ИмяВременногоФайла, КодировкаТекста.OEM);
		КомандаСистемы(ИмяВременногоФайла);
		УдалитьФайлы(ИмяВременногоФайла);
	Иначе
		ЗапуститьПриложение(КомандаPsExec);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция МакетСкрипта(ИмяМакета)

	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	Макет = ТекущийОбъект.ПолучитьМакет(ИмяМакета);
	Возврат Макет.ПолучитьТекст();

КонецФункции // ()

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
КонецПроцедуры

&НаСервере
Функция КаталогБазы(Агент)

	Файл = Новый Файл("\\192.168.20.18\public\qmc\ib\" + СтрЗаменить(ПолучитьIP(Агент), ".", "_") + ".csv");
	Если НЕ Файл.Существует() Тогда
		Файл = Новый Файл("\\192.168.20.18\public\qmc\ib\" + Агент.Хост + ".csv");
		Если НЕ Файл.Существует() Тогда
			Возврат "";
		КонецЕсли;
	КонецЕсли;
	
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(Файл.ПолноеИмя);
	Если Текст.КоличествоСтрок() = 0 Тогда
		Сообщить("" + Агент + ": не удалось определить каталог ИБ");
		Возврат "";
	КонецЕсли;
	
	стр = Текст.ПолучитьСтроку(1);
	стр = Лев(стр, СтрНайти(стр, ";")-1);
	стр = СокрЛП(СтрЗаменить(стр, "\1cv8.1cd", ""));
	
	Если СтрНачинаетсяС(НРег(стр), "srvr") Тогда
		стр = СтрЗаменить(НРег(стр), "srvr=""", "");
		стр = СтрЗаменить(стр, "ref=""", "");
		стр = СтрЗаменить(стр, """", "");
		стр = СтрЗаменить(стр, ",", "\");
		стр = " /S """ + стр + """";
	ИначеЕсли НЕ ПустаяСтрока(стр) Тогда
		стр = " /F """ + стр + """";
	КонецЕсли;
		
	Возврат стр;
	
КонецФункции // ()

&НаСервере
Функция ЕстьФайлВыгрузкиНаКлиенте(Агент)

	Если РегистрыСведений.ПоказателиАгентов.ПолучитьЗначение(Агент, "ЕстьФайлВыгрузки") = "Да" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Файл = Новый Файл(СтрЗаменить("\\192.168.20.18\public\ex\Message_ЦБ_М00.zip", "М00", СокрЛП(Агент.Магазин.Код)));
	Если Файл.Существует() Тогда
		РегистрыСведений.ПоказателиАгентов.УстановитьЗначение(Агент, "ЕстьФайлВыгрузки", Истина);
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;

КонецФункции // ()

&НаСервере
Функция КлиентОтчиталсяОПолученииФайлаВыгрузки(Агент)

	Если РегистрыСведений.ПоказателиАгентов.ПолучитьЗначение(Агент, "КлиентОтчиталсяОПолучении") = "Да" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Файл = Новый Файл(СтрЗаменить("\\192.168.20.18\public\ex\Message_ЦБ_М00.log", "М00", СокрЛП(Агент.Магазин.Код)));
	Если Файл.Существует() Тогда
		РегистрыСведений.ПоказателиАгентов.УстановитьЗначение(Агент, "КлиентОтчиталсяОПолучении", Истина);
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;

КонецФункции // ()

&НаСервере
Функция КлиентОтчиталсяОПолученииФайла(Агент, ИмяФайла)

	Если РегистрыСведений.СвойстваКомпьютеров.ПолучитьСвойство(Агент.Компьютер, , "КлиентОтчиталсяОПолученииФайла") = "Да" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Файл = Новый Файл("\\192.168.20.18\public\ex\" + СокрЛП(Агент.Код) + "_ " + ИмяФайла + ".log");
	Если Файл.Существует() Тогда
		РегистрыСведений.СвойстваКомпьютеров.ЗаписатьСвойство(Агент.Компьютер, , "КлиентОтчиталсяОПолученииФайла", "Да");
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;

КонецФункции

&НаСервере
Функция БазыНайдены(Агент)

	//Если РегистрыСведений.ПоказателиАгентов.ПолучитьЗначение(Агент, "БазыНайдены") = "Да" Тогда
	//	Возврат Истина;
	//КонецЕсли;	
	ИмяФайла = "\\192.168.20.18\public\qmc\ib\" + СокрЛП(СтрЗаменить(Агент.IP, ".", "_")) + ".csv";
	Файл = Новый Файл(ИмяФайла);
	Если Файл.Существует() Тогда
		РегистрыСведений.ПоказателиАгентов.УстановитьЗначение(Агент, "БазыНайдены", Истина);
		
		ФайлНастроек = Новый ТекстовыйДокумент;
		ФайлНастроек.Прочитать(ИмяФайла);
		СтрокаНастроек = ФайлНастроек.ПолучитьСтроку(1);
		ПутьБазы = СокрЛП(Лев(СтрокаНастроек, СтрНайти(СтрокаНастроек, ";") - 1));		
		РегистрыСведений.ПоказателиАгентов.УстановитьЗначение(Агент, "ПутьКБазе", ПутьБазы);
		Возврат Истина;
	Иначе
		РегистрыСведений.ПоказателиАгентов.УстановитьЗначение(Агент, "БазыНайдены", Ложь);
		РегистрыСведений.ПоказателиАгентов.УстановитьЗначение(Агент, "ПутьКБазе", "?");
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ЗаписатьСостояние(Агент, Строка)

	Результат = ЗначениеИзСтрокиВнутр(Строка);
	РегистрыСведений.ПоказателиАгентов.УстановитьЗначение(Агент, "Версия", Результат.Версия);
	РегистрыСведений.ПоказателиАгентов.УстановитьЗначение(Агент, "КаталогОбмена", Результат.КаталогОбмена);
	РегистрыСведений.ПоказателиАгентов.УстановитьЗначение(Агент, "КонфигурацияИзменена", Результат.КонфигурацияИзменена);
	
	Попытка
		Если НЕ ВРег(Агент.Хост) = ВРег(Результат.ИмяКомпьютера) Тогда
			об = Агент.ПолучитьОбъект();
			об.Хост = ВРег(Результат.ИмяКомпьютера);
			об.Наименование = об.Магазин.Код + " - " + об.Хост;
			об.Записать();
			об = Агент.Оборудование.ПолучитьОбъект();
			об.Наименование = Агент.Наименование;
			об.host = Агент.Хост;
			об.Записать();
		КонецЕсли;
	Исключение
	
	КонецПопытки;

КонецФункции // ()

#Область Команды

&НаКлиенте
Процедура УсечьОбъемВыгрузки(Команда)
	
	ВыполнитьВнешнююОбработкуУдаленно(КаталогОбработок() + "SyncCleanup.epf", Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьЗащитуОтОпасныхДействий(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		Если РазрядностьОС(Ссылка) = "32" Тогда
			Каталог = "C:\Program Files\1Cv8";
		Иначе
			Каталог = "C:\Program Files (x86)\1Cv8";
		КонецЕсли;
		ЗапуститьУдаленно(ip, "copy ""\\192.168.20.18\public\qmc\dist\conf.cfg"" """ + Каталог + "\conf\conf.cfg"" /y", , Истина);
		
		Тело = "
		|net use \\%1\c$ %5 /USER:%4
		|copy %2 ""\\%1\%3"" /y
		|" + ?(НеЗакрыватьКонсольПослеВыполнения, "pause", "");
		Тело = СтрШаблон(Тело, IP, "\\192.168.20.18\public\qmc\dist\conf.cfg", СтрЗаменить(Каталог + "\conf\conf.cfg", ":\","$\"), "user", "97315");
		ВременныйФайл = ПолучитьИмяВременногоФайла(".cmd");
		Текст = Новый ЗаписьТекста(ВременныйФайл, "cp866");
		Текст.Записать(Тело);
		Текст.Закрыть();
		ЗапуститьПриложение(ВременныйФайл,,Истина);
		УдалитьФайлы(ВременныйФайл);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиБазы(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Если БазыНайдены(Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка) = Истина Тогда
			Продолжить;
		КонецЕсли;
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		//КодКоманды = ПутьКПлатформе(Ссылка) + " /F ""c:\1c\empty-ib"" /N1 /P1 /DisableStartupMessages /Execute """ + КаталогОбработок() + "find-ib.epf"" /C ""ID:" + СтрЗаменить(IP, ".", "_") + ";""";
		КодКоманды = ПутьКПлатформе(Ссылка) + " /F ""c:\1c\empty-ib"" /N1 /P1 /DisableStartupMessages /Execute """ + КаталогОбработок() + "find-ib.epf"" /C ""ID:" + СтрЗаменить(IP, ".", "_") + ";""";
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, Истина, , ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПутьКПлатформе(Агент)

	Если Ложь Тогда Агент = Справочники.АгентыЦКК.ПустаяСсылка() КонецЕсли;
	
	Если СтрЧислоВхождений(Агент.Оборудование.Архитектура, "32") > 0 Тогда
		Результат = """C:\Program Files\1Cv8\8.3.14.1779\bin\1cv8s.exe""";
	Иначе
		Результат = """C:\Program Files (x86)\1Cv8\8.3.14.1779\bin\1cv8s.exe""";
	КонецЕсли;
	
	Возврат СтрЗаменить(Результат, "8.3.14.1779", Версия1С(Агент));

КонецФункции // ()

&НаСервере
Функция КаталогПлатформы(Агент)

	Если Ложь Тогда Агент = Справочники.АгентыЦКК.ПустаяСсылка() КонецЕсли;
	
	Если Агент.Оборудование.Архитектура = "32-bit" Тогда
		Результат = "C:\Program Files\1Cv8\8.3.14.1779";
	Иначе
		Результат = "C:\Program Files (x86)\1Cv8\8.3.14.1779";
	КонецЕсли;

	Возврат СтрЗаменить(Результат, "8.3.14.1779", Версия1С(Агент));
	
КонецФункции

Функция Версия1С(Агент)

	Версия1С = "8.3.14.1779";
	Если НЕ ПустаяСтрока(Агент.Версия1С) Тогда
		Версия1С = СокрЛП(Агент.Версия1С);
	КонецЕсли;
	
	Возврат Версия1С;
	
КонецФункции

Функция РазрядностьОС(Агент)

	Возврат Агент.Компьютер.Разрядность;
	
КонецФункции

&НаКлиенте
Процедура ПоложитьФайлВыгрузкиКлиенту(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		
		Если НЕ ЕстьФайлВыгрузкиНаКлиенте(Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Если КлиентОтчиталсяОПолученииФайлаВыгрузки(Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = СтрЗаменить(МакетСкрипта("СкриптПоложитьФайлВыгрузки"), "М00", ПолучитьКод(Ссылка));
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
		Если ВыводКоманд Тогда
			Сообщить(КодКоманды);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоложитьФайлВыгрузкиКлиентуПринудительно(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		
		Если НЕ ЕстьФайлВыгрузкиНаКлиенте(Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		УдалитьФайлы(СтрЗаменить("\\192.168.20.18\public\ex\Message_ЦБ_М00.log", "М00", СокрЛП(Элементы.Список.ДанныеСтроки(ТекущийИндекс).Код)));
		
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = СтрЗаменить(МакетСкрипта("СкриптПоложитьФайлВыгрузки"), "М00", ПолучитьКод(Ссылка));
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗабратьОтКлиента(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = СтрЗаменить("move c:\1c\ex\Message_М00_ЦБ.zip \\192.168.20.18\public\ex\Message_М00_ЦБ.zip", "М00", ПолучитьКод(Ссылка));
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьОбмен(Команда)

	ВыполнитьВнешнююОбработкуУдаленно(КаталогОбработок() + "StartSync.epf", Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьОбменЗагрузка(Команда)

	ВыполнитьВнешнююОбработкуУдаленно(КаталогОбработок() + "StartSyncImport.epf", Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьОбменВыгрузка(Команда)

	ВыполнитьВнешнююОбработкуУдаленно(КаталогОбработок() + "StartSyncExport.epf", Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНастройкиОбменаНаСеть(Команда)
	
	ВыполнитьВнешнююОбработкуУдаленно(КаталогОбработок() + "ModifyExchangeSettings.epf", Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоложитьСлужебныеФайлы(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, МакетСкрипта("СкопироватьСлужебныеФайлы"), Ложь,, ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСостояние(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		Хост = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Хост;
		
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяФайла = "\\192.168.20.18\public\requests\" + СтрЗаменить(IP, ".", "_") + ".state";
		Файл = Новый Файл(ИмяФайла);
		Если Файл.Существует() Тогда
		  	Текст = Новый ТекстовыйДокумент;
			Текст.Прочитать(ИмяФайла);
			ЗаписатьСостояние(Ссылка, Текст.ПолучитьТекст());
		КонецЕсли;
		
		КаталогБазы = КаталогБазы(Ссылка);
		Если ПустаяСтрока(КаталогБазы) Тогда
			Сообщить("Не определен каталог базы");
			Продолжить;
		КонецЕсли;
		
		КодКоманды = ПутьКПлатформе(Ссылка) + КаталогБазы + ФрагментКомандыУчетныеДанные() + " /DisableStartupMessages /Execute """ + КаталогОбработок() + "GetState.epf"" /C ""ID:" + СтрЗаменить(IP, ".", "_") + ";""";
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
		Если ВыводКоманд Тогда
			Сообщить(КодКоманды);
		КонецЕсли;
		
	КонецЦикла;
	
	Сообщить("Запустите проверку повторно для обработки полученных ранее результатов");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПроцессы1С(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = "taskkill /IM 1c* /f";
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , Истина, ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Запустить1СПодАдмином(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КаталогБазы = КаталогБазы(Ссылка);
		Если ПустаяСтрока(КаталогБазы) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = ПутьКПлатформе(Ссылка) + КаталогБазы + ФрагментКомандыУчетныеДанные() + "";
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКонфигурациюБД(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КаталогБазы = КаталогБазы(Ссылка);
		Если ПустаяСтрока(КаталогБазы) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = "
		|net stop Apache
		|taskkill /IM httpd* /f
		|taskkill /IM 1c* /f
		|" + ПутьКПлатформе(Ссылка)+ " CONFIG /Visible " + КаталогБазы + ФрагментКомандыУчетныеДанные() + " /UpdateDBCfg
		|net start Apache
		|";
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОстановитьApache(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = "
		|net stop Apache
		|taskkill /IM httpd* /f
		|";
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьApache(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = "
		|net start Apache
		|";
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьАвтообмен(Команда)
	
	ВыполнитьВнешнююОбработкуУдаленно(КаталогОбработок() + "DisableAutoexchange.epf", Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьАвтообмен(Команда)
	
	ВыполнитьВнешнююОбработкуУдаленно(КаталогОбработок() + "EnableAutoexchange.epf", Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УменьшитьНомерПринятогоПакета(Команда)
	
	ВыполнитьВнешнююОбработкуУдаленно(КаталогОбработок() + "DecreaseRecieveNumber.epf", Истина, Ложь);
	//Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
	//	
	//	Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
	//	IP = ПолучитьIP(Ссылка);	
	//	Если НЕ ЗначениеЗаполнено(IP) Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	КаталогБазы = КаталогБазы(Ссылка);
	//	Если ПустаяСтрока(КаталогБазы) Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	КодКоманды = ПутьКПлатформе(Ссылка) + КаталогБазы + ФрагментКомандыУчетныеДанные() + " /DisableStartupMessages /Execute """ + КаталогОбработок() + "DecreaseRecieveNumber.epf""";
	//	ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
	//	ЗапуститьУдаленно(ip, КодКоманды, Истина, , ПаузаПослеВыполнения);
	//	
	//КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезагрузитьПК(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КаталогБазы = КаталогБазы(Ссылка);
		Если ПустаяСтрока(КаталогБазы) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = "shutdown -r -t 1";
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, Истина, , ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗавершениеЗагрузкиВЦБ(Команда)
	
	КодКоманды = """C:\Program Files (x86)\1Cv8\8.3.14.1779\bin\1cv8.exe"" /S 192.168.20.244\rozn_cb_225 /NАдминистратор /P1541 /DisableStartupMessages /Execute """ + КаталогОбработок() + "GetSuccessfullRecieve.epf""";
	ЗапуститьПриложение(КодКоманды, , Истина);
	
	ПроверитьЗавершениеЗагрузкиВЦБНаСервере();
	
КонецПроцедуры

Процедура ПроверитьЗавершениеЗагрузкиВЦБНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	АгентыЦКК.Магазин.Код КАК МагазинКод,
	               |	АгентыЦКК.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.АгентыЦКК КАК АгентыЦКК";
	тзАгенты = Запрос.Выполнить().Выгрузить();
	
	тз = ПрочитатьЗначениеИзФайла("\\192.168.20.18\public\temp\FinalizedNodes.txt");
	Для каждого Код Из тз Цикл
		стрАгент = тзАгенты.Найти(СокрЛП(Код));
		Если стрАгент = Неопределено Тогда
			Сообщить("Не найден агент с кодом " + СокрЛП(Код));
			Продолжить;
		КонецЕсли;
		РегистрыСведений.ПоказателиАгентов.УстановитьЗначение(стрАгент.Ссылка, "ДанныеПолученыВЦБ", "Да");
		РегистрыСведений.ПоказателиАгентов.УстановитьЗначение(стрАгент.Ссылка, "ОбновлениеЗавершено", "Да");
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

Процедура ЗаписатьЗначениеВФайл(ИмяФайла, Значение)

	Текст = Новый ТекстовыйДокумент;
	Текст.УстановитьТекст(ЗначениеВСтрокуВнутр(Значение));
	Текст.Записать(ИмяФайла);

КонецПроцедуры

Функция ПрочитатьЗначениеИзФайла(ИмяФайла)

	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ИмяФайла);
	Возврат ЗначениеИзСтрокиВнутр(Текст.ПолучитьТекст());

КонецФункции

&НаКлиенте
Процедура КомандаВыполнитьОбработкуИнтерактивно(Команда)

	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "*.epf";
	Если НЕ Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьВнешнююОбработкуУдаленно(Диалог.ПолноеИмяФайла, Истина, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыполнитьОбработку(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "*.epf";
	Если НЕ Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьВнешнююОбработкуУдаленно(Диалог.ПолноеИмяФайла, Ложь, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВнешнююОбработкуУдаленно(Знач ИмяФайла, Знач Интерактивно, Знач ПодСистемнойУчетнойЗаписью)
	
	х = 0;
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КаталогБазы = КаталогБазы(Ссылка);
		Если ПустаяСтрока(КаталогБазы) Тогда
			Продолжить;
		КонецЕсли;
		
		Если РежимОтладки Тогда
			Интерактивно = ИнтерактивноеВыполнение;
			ПодСистемнойУчетнойЗаписью = ВыполнениеПодSYSTEM;
		КонецЕсли;
		
		КодКоманды = ПутьКПлатформе(Ссылка) + КаталогБазы + ФрагментКомандыУчетныеДанные() + " /DisableStartupMessages /Execute """ + ИмяФайла + """";
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, Интерактивно, ПодСистемнойУчетнойЗаписью, ПаузаПослеВыполнения);
		
		Если ВыводКоманд И х = 0 Тогда
			Сообщить(КодКоманды);
		КонецЕсли;
		
		х = х + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьОтметкиЗагрузкиФайлаОбменаДляЦБ(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		МагазинКод = СокрЛП(Элементы.Список.ДанныеСтроки(ТекущийИндекс).МагазинКод);
		УдалитьФайлы(СтрЗаменить("\\192.168.20.18\public\ex\Message_code_ЦБ.size", "code", МагазинКод));
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНаличиеФайлаДляЗагрузки(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		МагазинКод = СокрЛП(Элементы.Список.ДанныеСтроки(ТекущийИндекс).МагазинКод);
		Файл = Новый Файл(СтрЗаменить("\\192.168.20.18\public\ex\Message_code_ЦБ.zip", "code", МагазинКод));
		УстановитьПоказатель(Ссылка, "ЕстьФайлЗагрузки", Файл.Существует());
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьПоказатель(Ссылка, Показатель, Значение)

	РегистрыСведений.ПоказателиАгентов.УстановитьЗначение(Ссылка, Показатель, Значение);

КонецПроцедуры

&НаКлиенте
Процедура cmd(Команда)
	
	IP = Элементы.Список.ТекущиеДанные.IP;
	Код = "c:\1c\psexec.exe \\" + IP + " -u user -p 97315 cmd";
	Если ВыводКоманд Тогда
		Сообщить(Код);
	КонецЕсли;
	
	ЗапуститьПриложение(Код);

КонецПроцедуры

&НаКлиенте
Процедура powershell(Команда)
	
	IP = Элементы.Список.ТекущиеДанные.IP;
	Код = "c:\1c\psexec.exe \\" + IP + " -u user -p 97315 powershell";
	Если ВыводКоманд Тогда
		Сообщить(Код);
	КонецЕсли;
	
	ЗапуститьПриложение(Код);

КонецПроцедуры

&НаКлиенте
Процедура Открыть1СЧерезHttp(Команда)

	Попытка
		IP = Элементы.Список.ТекущиеДанные.IP;
		ИмяПубликации = ПроверитьДоступ(IP);
		Код = """C:\Program Files (x86)\1Cv8\common\1cestart.exe"" /WS http://" + IP + "/" + ИмяПубликации + " /N Администратор /P 2684 /DisableStartupMessages";
		Если ВыводКоманд Тогда
			Сообщить(Код);
		КонецЕсли;
		
		ЗапуститьПриложение(Код);
		
	Исключение
		Сообщить("Ошибка подключения: http://" + IP + "/db");
		
	КонецПопытки;

КонецПроцедуры

Функция КаталогОбработок()

	Возврат "\\192.168.20.18\public\qmc\epf\";

КонецФункции // ()

Функция КаталогЗапросов()

	Возврат "\\192.168.20.18\public\requests\";

КонецФункции // ()

Функция ФрагментКомандыУчетныеДанные()

	Возврат " /NАдминистратор /P2684";

КонецФункции // ()

&НаКлиенте
Процедура ПовторитьПоискБаз(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		//КодКоманды = ПутьКПлатформе(Ссылка) + " /F ""c:\1c\empty-ib"" /N1 /P1 /DisableStartupMessages /Execute """ + КаталогОбработок() + "find-ib.epf"" /C ""ID:" + СтрЗаменить(IP, ".", "_") + ";""";
		КодКоманды = ПутьКПлатформе(Ссылка) + " /F ""c:\1c\empty-ib"" /N1 /P1 /DisableStartupMessages /Execute """ + КаталогОбработок() + "find-ib.epf"" /C ""ID:" + СтрЗаменить(IP, ".", "_") + ";""";
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, Истина, , ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработкуЧерезHTTP(Команда)

	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "*.epf|*.epf";
	Если НЕ Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		IP = Элементы.Список.ДанныеСтроки(ТекущийИндекс).IP;
		
		Попытка
			
			ИмяПубликации = ПроверитьДоступ(IP);
			
			Код = """C:\Program Files (x86)\1Cv8\common\1cestart.exe"" /WS http://" + IP + "/" + ИмяПубликации + " /N Администратор /P 2684 /DisableStartupMessages /Execute " + Диалог.ПолноеИмяФайла;
			Если ВыводКоманд Тогда
				Сообщить(Код);
			КонецЕсли;
			
			ЗапуститьПриложение(Код);
				
		Исключение
			Сообщить("Ошибка подключения: http://" + IP + "/db");
			
		КонецПопытки;
			
	КонецЦикла;

КонецПроцедуры

Функция ПроверитьДоступ(IP)

	Ответ = КоннекторHTTP.Get("http://" + IP + "/db");
	Если Ответ.КодСостояния = 200 Тогда
		Тело = Ответ.ОтветHTTP.ПолучитьТелоКакСтроку();
		Если СтрНайти(Тело, "<title>1С:Предприятие</title>") > 0 Тогда
			Возврат "db";
		КонецЕсли;
		
	КонецЕсли;
	
	Ответ = КоннекторHTTP.Get("http://" + IP + "/retail");
	Если Ответ.КодСостояния = 200 Тогда
		Тело = Ответ.ОтветHTTP.ПолучитьТелоКакСтроку();
		Если СтрНайти(Тело, "<title>1С:Предприятие</title>") > 0 Тогда
			Возврат "retail";
		КонецЕсли;
		
	КонецЕсли;
	
	ВызватьИсключение "Ошибка доступа по IP";

КонецФункции // ()

&НаКлиенте
Процедура ПоложитьФайлКлиенту(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Показать(Новый ОписаниеОповещения("ПоложитьФайлКлиентуЗавершение", ЭтотОбъект, Новый Структура("Диалог", Диалог)));
	
КонецПроцедуры

&НаКлиенте
Процедура ПоложитьФайлКлиентуЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	
	Файл = Новый Файл(Диалог.ПолноеИмяФайла);
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		
		Если КлиентОтчиталсяОПолученииФайла(Ссылка, Файл.Имя) Тогда
			Продолжить;
		КонецЕсли;
		
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = СтрЗаменить(МакетСкрипта("СкриптПоложитьФайлВыгрузки"), "Message_ЦБ_М00.zip", Файл.Имя);
		КодКоманды = СтрЗаменить(КодКоманды, "Message_ЦБ_М00.log", СокрЛП(Элементы.Список.ДанныеСтроки(ТекущийИндекс).Код) + "_ " + Файл.Имя + ".log");
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
		Если ВыводКоманд Тогда
			Сообщить(КодКоманды);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьCMD(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Показать(Новый ОписаниеОповещения("ВыполнитьCMDЗавершение", ЭтотОбъект, Новый Структура("Диалог", Диалог)));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьCMDЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	
	Файл = Новый Файл(Диалог.ПолноеИмяФайла);
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(Файл.ПолноеИмя);
		
		КодКоманды = Текст.ПолучитьТекст();
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
		Если ВыводКоманд Тогда
			Сообщить(КодКоманды);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СинхронизироватьСРТ() Экспорт
	
	ПараметрыЗапроса = Новый Структура("code, format", "all", "json");
	ДополнительныеПараметры = Новый Структура("ПараметрыПреобразованияJSON", Новый Структура("ПрочитатьВСоответствие", Ложь));
	Таблица = КоннекторHTTP.PostJson("http://Администратор:1541@srv-rozn-sql:5080/retail/hs/fastex/dib/nodes", ПараметрыЗапроса, ДополнительныеПараметры);
	
	НачатьТранзакцию();
	Для каждого Запись Из Таблица Цикл
	
		Ссылка = Справочники.Магазины.НайтиПоКоду(СокрЛП(Запись.Код));
		Если Ссылка.Пустая() Тогда
			Подразделение = Справочники.Магазины.СоздатьЭлемент();
		Иначе
			Подразделение = Ссылка.ПолучитьОбъект();
		КонецЕсли;
		
		Подразделение.Код = СокрЛП(Запись.Код);
		Подразделение.Наименование = СокрЛП(Запись.Наименование);
		Подразделение.Записать();
		
		Компьютер = Справочники.АгентыЦКК.НайтиПоРеквизиту("Магазин", Подразделение.Ссылка);
		Если НЕ Компьютер.Пустая() Тогда
			Компьютер = Компьютер.ПолучитьОбъект();
		Иначе
			Компьютер = Справочники.АгентыЦКК.СоздатьЭлемент();
			Компьютер.Наименование = СокрЛП(Запись.Код) + " - " + СокрЛП(Запись.IP);
		КонецЕсли;
		Компьютер.Магазин = Подразделение.Ссылка;
		Компьютер.IP = СокрЛП(Запись.IP);
		Компьютер.Записать();
	
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	
КонецФункции

&НаКлиенте
Процедура ПолучитьКомпьютерыИзРозницы(Команда)
	СинхронизироватьСРТ();
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНастройкиОбменаНаФТП(Команда)
	ВыполнитьВнешнююОбработкуУдаленно(КаталогОбработок() + "ModifyExchangeSettingsToFTP.epf", Истина, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНастройкиОбменаЛокально(Команда)
	ВыполнитьВнешнююОбработкуУдаленно(КаталогОбработок() + "ModifyExchangeSettingsToLocal.epf", Истина, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПоложитьФайлВыгрузкиКлиентуXCopy(Команда)
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		
		//Если НЕ ЕстьФайлВыгрузкиНаКлиенте(Ссылка) Тогда
		//	Продолжить;
		//КонецЕсли;
		
		//Если КлиентОтчиталсяОПолученииФайлаВыгрузки(Ссылка) Тогда
		//	Продолжить;
		//КонецЕсли;
		
		IP = ПолучитьIP(Ссылка);
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = СтрЗаменить(МакетСкрипта("СкриптПоложитьФайлВыгрузкиXCopy"), "М00", ПолучитьКод(Ссылка));
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
		Если ВыводКоманд Тогда
			Сообщить(КодКоманды);
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНестандартныеУстановкиApache(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = ПолучитьТекстКоманды("УдалитьНестандартныеУстановкиApache");
		
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСлужбуApacheИОпубликоватьРозницу(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = ПолучитьТекстКоманды("УстановитьСлужбуApacheИОпубликоватьРозницу");
		
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьСтандартныеПапки1С(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = ПолучитьТекстКоманды("СкопироватьСтандартныеПапки1С");
		
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьПапкуРабочейБазы1С(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяФайлаНастроек = "\\192.168.20.18\public\qmc\ib\" + СокрЛП(СтрЗаменить(IP, ".", "_")) + ".csv";
		Файл = Новый Файл(ИмяФайлаНастроек);
		Если НЕ Файл.Существует() Тогда
			Сообщить("Операция переноса базы для агента " + Ссылка + " не выполнена. В папке \\192.168.20.18\public\qmc\ib\ не найден файл с настройками!");
			Продолжить;
		КонецЕсли;
		
		ФайлНастроек = Новый ТекстовыйДокумент;
		ФайлНастроек.Прочитать(ИмяФайлаНастроек);
		СтрНастроек = ФайлНастроек.ПолучитьСтроку(1);
		ИтСтрНастроек = СокрЛП(Лев(СтрНастроек, СтрНайти(СтрНастроек, ";") - 1));
		ДопПараметры = Новый Структура("ИтСтрНастроек", ИтСтрНастроек);
		
		КодКоманды = ПолучитьТекстКоманды("ПереместитьПапкуРабочейБазы1С", ДопПараметры);
		
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПутьКБазеУМ(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = ПолучитьТекстКоманды("ОбновитьПутьКБазеУМ");
		
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТекстКоманды(НаимКом, ДопПараметры = Неопределено)
	
	ТекстКоманды = "";
	Если НаимКом = "ОбновитьПутьКБазеУМ" Тогда
		ТекстКоманды = "
		|@echo off
		|del %USERPROFILE%\AppData\Roaming\1C\1CEStart\ibases.v8i
		|set src_dir=""\\192.168.20.18\public\Instruments\BLSoft\ibases\UM\ibases.v8i""
		|set dst_dir=""%UserProfile%\AppData\Roaming\1C\1CEStart\ibases.v8i""
		|echo f|xcopy /y %src_dir% %dst_dir% /Z
		|";
		
	ИначеЕсли НаимКом = "УдалитьНестандартныеУстановкиApache" Тогда
		ТекстКоманды = "
		|@echo off
		|C:\Apache24\bin\httpd.exe -k uninstall
		|C:\Apache22\bin\httpd.exe -k uninstall
		|C:\Apache\bin\httpd.exe -k uninstall
		|
		|rd /s /q C:\Apache24
		|rd /s /q C:\Apache22
		|rd /s /q C:\Apache
		|";
		
	ИначеЕсли НаимКом = "УстановитьСлужбуApacheИОпубликоватьРозницу" Тогда
		ТекстКоманды = "
		|@echo off
		|C:\1c\apache\bin\httpd.exe -k install -n Apache
		|
		|""C:\Program Files (x86)\1cv8\8.3.14.1779\bin\webinst.exe"" -apache24 -wsdir retail -dir ""C:\1c\apache\htdocs\retail"" -connstr ""File=&quot;C:\1c\ib\retail&quot;;"" -confPath ""C:\1c\apache\conf\httpd.conf""
		|
		|set src_dir=""\\192.168.20.18\public\Instruments\BLSoft\defaultVRD\retail\default.vrd""
		|set dst_dir=""C:\1c\apache\htdocs\retail\default.vrd""
		|echo f|xcopy /y %src_dir% %dst_dir% /Z
		|";
		
	ИначеЕсли НаимКом = "ЗаменитьVRD" Тогда
		ТекстКоманды = "
		|set src_dir=""\\192.168.20.18\public\Instruments\BLSoft\defaultVRD\retail\default.vrd""
		|set dst_dir=""C:\1c\apache\htdocs\retail\default.vrd""
		|echo f|xcopy /y %src_dir% %dst_dir% /Z
		|";
		
	ИначеЕсли НаимКом = "ПереместитьПапкуРабочейБазы1С" Тогда
		ТекстКоманды = "
		|@echo off
		|set src_dir=""" + ДопПараметры.ИтСтрНастроек + """
		|set dst_dir=""C:\1c\ib\retail\1Cv8.1CD""
		|echo f|xcopy /y %src_dir% %dst_dir% /Z
		|
		|set src_dir=""" + Лев(ДопПараметры.ИтСтрНастроек, СтрДлина(ДопПараметры.ИтСтрНастроек) - 8) + "DoNotCopy.txt""
		|set dst_dir=""C:\1c\ib\retail\DoNotCopy.txt""
		|echo f|xcopy /y %src_dir% %dst_dir% /Z
		|";
		
	ИначеЕсли НаимКом = "ОбновитьПутьКБазеУМ" Тогда
		ТекстКоманды = "
		|@echo off
		|del %USERPROFILE%\AppData\Roaming\1C\1CEStart\ibases.v8i
		|
		|set src_dir=""\\192.168.20.18\public\Instruments\BLSoft\ibases\UM\ibases.v8i""
		|set dst_dir=""%UserProfile%\AppData\Roaming\1C\1CEStart\ibases.v8i""
		|echo f|xcopy /y %src_dir% %dst_dir% /Z
		|";
		
	ИначеЕсли НаимКом = "СкопироватьСтандартныеПапки1С" Тогда
		ТекстКоманды = "
		|@echo off
		|set src_dir=""\\192.168.20.18\public\Instruments\BLSoft\1C""
		|set dst_dir=""C:\1c""
		|robocopy %src_dir% %dst_dir% /E /Z
		|";
		
	КонецЕсли;
	
	Возврат ТекстКоманды;
	
КонецФункции

&НаКлиенте
Процедура ПривестиАпачИБСтандарт(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		КодКоманды = "
		|@echo off
		|color 3f
		|
		|net stop Apache
		|";
		
		ЧастьКоманды = ПолучитьТекстКоманды("УдалитьНестандартныеУстановкиApache");
		КодКоманды = КодКоманды + ЧастьКоманды;
		
		ЧастьКоманды = ПолучитьТекстКоманды("СкопироватьСтандартныеПапки1С");
		КодКоманды = КодКоманды + ЧастьКоманды;
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяФайлаНастроек = "\\192.168.20.18\public\qmc\ib\" + СокрЛП(СтрЗаменить(IP, ".", "_")) + ".csv";
		Файл = Новый Файл(ИмяФайлаНастроек);
		Если НЕ Файл.Существует() Тогда
			Сообщить("Операция переноса базы для агента " + Ссылка + " не выполнена. В папке \\192.168.20.18\public\qmc\ib\ не найден файл с настройками!");
			Продолжить;
		КонецЕсли;
		
		ФайлНастроек = Новый ТекстовыйДокумент;
		ФайлНастроек.Прочитать(ИмяФайлаНастроек);
		СтрНастроек = ФайлНастроек.ПолучитьСтроку(1);
		ИтСтрНастроек = СокрЛП(Лев(СтрНастроек, СтрНайти(СтрНастроек, ";") - 1));
		ДопПараметры = Новый Структура("ИтСтрНастроек", ИтСтрНастроек);
		
		ЧастьКоманды = ПолучитьТекстКоманды("ПереместитьПапкуРабочейБазы1С", ДопПараметры);
		КодКоманды = КодКоманды + ЧастьКоманды;
		
		ЧастьКоманды = ПолучитьТекстКоманды("УстановитьСлужбуApacheИОпубликоватьРозницу");
		КодКоманды = КодКоманды + ЧастьКоманды;
		
		КодКоманды = КодКоманды + 
		"
		|net start Apache
		|";
		ЧастьКоманды = ПолучитьТекстКоманды("ОбновитьПутьКБазеУМ");
		КодКоманды = КодКоманды + ЧастьКоманды;
		
		КодКоманды = КодКоманды + 
		"
		|exit";
		
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьУстановкуПлатформы(Команда)
	
		Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = "
		|cd C:\1c\platforma\windows_8_3_14_1779
		|setup.exe /S
		|";
		
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВыделитьСтаруюВерсиюНаСервере()
	
	МассивМагазинов  =  Элементы.Список.ВыделенныеСтроки;
	МассивМагазинов.Очистить();
	ЗапросУМ = Новый Запрос;
	ЗапросУМ.Текст = 
	"ВЫБРАТЬ
	|	АгентыЦКК.Ссылка КАК Ссылка,
	|	АгентыЦКК.IP КАК IP
	|ИЗ
	|	Справочник.АгентыЦКК КАК АгентыЦКК
	|ГДЕ
	|	АгентыЦКК.Версия1С ПОДОБНО ""8.3.12.%""
	|	И АгентыЦКК.IP ПОДОБНО ""%.2""
	|	И  АгентыЦКК.ПометкаУдаления = ЛОЖЬ";
	
	РезультатЗапросаУМ = ЗапросУМ.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапросаУМ.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивМагазинов.Добавить(ВыборкаДетальныеЗаписи.ссылка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьСтаруюВерсию(Команда)
	ВыделитьСтаруюВерсиюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьVRD(Команда)
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
		IP = ПолучитьIP(Ссылка);	
		Если НЕ ЗначениеЗаполнено(IP) Тогда
			Продолжить;
		КонецЕсли;
		
		КодКоманды = ПолучитьТекстКоманды("ЗаменитьVRD");
		
		ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
		ЗапуститьУдаленно(ip, КодКоманды, , , ПаузаПослеВыполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЯрлыкИСписокБаз(Команда)
	Путь = "\\192.168.20.18\public\Instruments\BLSoft\ibases\Pos\";
	для Каждого стр из Элементы.Список.ВыделенныеСтроки цикл
		код =  ПолучитьКодМагазина(стр) ;
		IP = ОпределитьIPУМ(код) ;
		Если ЗначениеЗаполнено(Код) и ЗначениеЗаполнено(IP)  тогда
			ПутьКФайлу = Путь + прав(Код,СтрДлина(Код)-1); 
			СоздатьКаталог(ПутьКФайлу);
			ТекстIb = Новый ТекстовыйДокумент;
			ТекстIb.ДобавитьСтроку("[Информационная база]");  
			ТекстIb.ДобавитьСтроку("Connect=ws=" + символ(34)+ "http://"+IP+"/Retail" + символ(34)+ "");
			ТекстIb.ДобавитьСтроку("ID=");
			ТекстIb.ДобавитьСтроку("OrderInList=");
			ТекстIb.ДобавитьСтроку("Folder=/");
			ТекстIb.ДобавитьСтроку("OrderInTree=");
			ТекстIb.ДобавитьСтроку("External=0");
			ТекстIb.ДобавитьСтроку("UseProxy=0");
			ТекстIb.ДобавитьСтроку("App=Auto");
			ТекстIb.ДобавитьСтроку("WA=1");
			ТекстIb.ДобавитьСтроку("Version=8.3");
			ТекстIb.ДобавитьСтроку("WSA=1");
			ТекстIb.ДобавитьСтроку("DefaultVersion=8.3.14.1779");  
			ТекстIb.Записать(ПутьКФайлу + "\ibases.v8i", КодировкаТекста.UTF8);
			
			
		КонецЕсли;
	КонецЦикла;
	
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		Хост =  ПолучитьХостМагазина(стр);
		Если  хост = "POS" или хост = "POS1" или хост = "POS2" или хост = "POS3" тогда
			Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
			
			
			IP = ПолучитьIP(Ссылка);
			Если НЕ ЗначениеЗаполнено(IP) Тогда
				Продолжить;
			КонецЕсли;
			
			КодКоманды = СтрЗаменить(МакетСкрипта("СкриптПоложитьФайлiBasesВыгрузкиXCopy"), "КОДМАГАЗИНА", Прав(ПолучитьКод(Ссылка),СтрДлина(ПолучитьКод(Ссылка))-1));
			ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
			ЗапуститьУдаленно(ip, КодКоманды, Истина, , ПаузаПослеВыполнения);
			
			Если ВыводКоманд Тогда
				Сообщить(КодКоманды);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	для Каждого стр из Элементы.Список.ВыделенныеСтроки цикл
		код =  ПолучитьКодМагазина(стр) ;
		IP = ОпределитьIPУМ(код) ;
		Если ЗначениеЗаполнено(Код) и ЗначениеЗаполнено(IP)  тогда
			ПутьКФайлу = Путь + прав(Код,СтрДлина(Код)-1); 
			СоздатьКаталог(ПутьКФайлу);
			
			
			ТекстBat = Новый ТекстовыйДокумент;
			ТекстBat.ДобавитьСтроку("chcp 1251 >nul");
			ТекстBat.ДобавитьСтроку("SET SEARCH=1cv8c.exe");
			ТекстBat.ДобавитьСтроку("tasklist /fi " + символ(34)+ "imagename eq %SEARCH%" + символ(34)+ " /fo table /nh | find /c /i " + символ(34)+  "%SEARCH%"+ символ(34)+ "");
			//ТекстBat.ДобавитьСтроку("if %ERRORLEVEL%==1 IF EXIST " + символ(34)+ "%ProgramFiles(x86)%" + символ(34)+ " (Start /d " + символ(34)+ "C:\Program Files (x86)\1cv8\common" + символ(34)+ " 1cestart.exe " + символ(34)+ "ENTERPRISE /WS" + символ(34)+ "http://"+IP+"/retail" + символ(34)+ " /N" + символ(34)+ "Кассир "+код + символ(34)+ " /P" + символ(34)+ "123" + символ(34)+ ") IF EXIST " + символ(34)+ "%ProgramFiles%" + символ(34)+ " (Start /d " + символ(34)+ "C:\Program Files\1cv8\common" + символ(34)+ " 1cestart.exe " + символ(34)+ "ENTERPRISE /WS" + символ(34)+ "http://"+IP+"/retail" + символ(34)+ " /N" + символ(34)+ "Кассир "+код + символ(34)+ " /P" + символ(34)+ "123" + символ(34)+ ")");
			ТекстBat.ДобавитьСтроку("if %ERRORLEVEL%==1 IF EXIST " + символ(34)+ "%ProgramFiles%\1cv8" + символ(34)+ "  Start /d " + символ(34)+ "C:\Program Files\1cv8\common" + символ(34)+ " 1cestart.exe " + символ(34)+ "ENTERPRISE /WS" + символ(34)+ "http://"+IP+"/retail" + символ(34)+ " /N" + символ(34)+ "Кассир "+код + символ(34)+ " /P" + символ(34)+ "123" + символ(34)+ " IF NOT EXIST " + символ(34)+ "%ProgramFiles%\1cv8" + символ(34)+ " Start /d " + символ(34)+ "C:\Program Files (x86)\1cv8\common" + символ(34)+ " 1cestart.exe " + символ(34)+ "ENTERPRISE /WS" + символ(34)+ "http://"+IP+"/retail" + символ(34)+ " /N" + символ(34)+ "Кассир "+код + символ(34)+ " /P" + символ(34)+ "123" + символ(34)+ "");
			//ТекстBat.ДобавитьСтроку("if %ERRORLEVEL%==1 start /d " + символ(34)+ "C:\Program Files (x86)\1cv8\common" + символ(34)+ " 1cestart.exe " + символ(34)+ "ENTERPRISE /WS" + символ(34)+ "http://"+IP+"/retail" + символ(34)+ " /N" + символ(34)+ "Кассир "+код + символ(34)+ " /P" + символ(34)+ "123" + символ(34)+ "");
			ТекстBat.Записать( ПутьКФайлу+"\Розница.bat", КодировкаТекста.Системная);
		КонецЕсли;
	КонецЦикла;

		
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		Хост =  ПолучитьХостМагазина(стр);
		Если  хост = "POS" или хост = "POS1" или хост = "POS2" или хост = "POS3" тогда
			Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
			
			
			IP = ПолучитьIP(Ссылка);
			Если НЕ ЗначениеЗаполнено(IP) Тогда
				Продолжить;
			КонецЕсли;
			
			КодКоманды = СтрЗаменить(МакетСкрипта("СкриптПоложитьБатникДляЯрлыкаВыгрузкиXCopy"), "КОДМАГАЗИНА", Прав(ПолучитьКод(Ссылка),СтрДлина(ПолучитьКод(Ссылка))-1));
			ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
			ЗапуститьУдаленно(ip, КодКоманды, Истина, , ПаузаПослеВыполнения);
			
			Если ВыводКоманд Тогда
				Сообщить(КодКоманды);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		Хост =  ПолучитьХостМагазина(стр);
		Если  хост = "POS" или хост = "POS1" или хост = "POS2" или хост = "POS3" тогда
			Ссылка = Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка;
			
			
			IP = ПолучитьIP(Ссылка);
			Если НЕ ЗначениеЗаполнено(IP) Тогда
				Продолжить;
			КонецЕсли;
			
			КодКоманды = МакетСкрипта("СкриптПоложитьБатникДляЯрлыкаPOSXCopy");
			ПаузаПослеВыполнения = Элементы.Список.ВыделенныеСтроки.Количество() = 1 И НеЗакрыватьКонсольПослеВыполнения;
			ЗапуститьУдаленно(ip, КодКоманды, Истина, , ПаузаПослеВыполнения);
			
			Если ВыводКоманд Тогда
				Сообщить(КодКоманды);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 

&наСервере
Функция ОпределитьIPУМ(код)
	     	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АгентыЦКК.IP КАК IP
		|ИЗ
		|	Справочник.АгентыЦКК КАК АгентыЦКК
		|ГДЕ
		|	АгентыЦКК.Магазин.Код = &код
		|	И АгентыЦКК.Хост = ""UM""";
	
		Запрос.УстановитьПараметр("код", код);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		возврат ВыборкаДетальныеЗаписи.IP		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецФункции	

Функция ПолучитьКодМагазина(стр)      	
	Возврат стр.Магазин.Код;
КонецФункции

&наСервере
Функция ПолучитьIPМагазина(стр)   
	
	Возврат стр.IP;
КонецФункции

&наСервере
Функция ПолучитьХостМагазина(стр)   
	
	Возврат стр.Хост;
КонецФункции

&НаКлиенте
Процедура Кассы(Команда)
	КассыНаСервере();
КонецПроцедуры

&НаСервере
Процедура КассыНаСервере()
	ЗапросКасса = Новый Запрос;
	ЗапросКасса.Текст = 
	"ВЫБРАТЬ
	|	АгентыЦКК.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.АгентыЦКК КАК АгентыЦКК
	|ГДЕ
	|	АгентыЦКК.IP ПОДОБНО &ИП
	|	И АгентыЦКК.ПометкаУдаления = ЛОЖЬ
	|	И АгентыЦКК.Хост <> ""UM""";
	
	МассивМагазинов  =  Элементы.Список.ВыделенныеСтроки;
	МассивМагазинов.Очистить();
	ЗапросУМ = Новый Запрос;
	ЗапросУМ.Текст = 
	"ВЫБРАТЬ
	|	АгентыЦКК.Ссылка КАК Ссылка,
	|	АгентыЦКК.IP КАК IP
	|ИЗ
	|	Справочник.АгентыЦКК КАК АгентыЦКК
	|ГДЕ
	|	АгентыЦКК.Версия1С ПОДОБНО ""8.3.12.%""
	|	И АгентыЦКК.IP ПОДОБНО ""%.2""
	|	И  АгентыЦКК.ПометкаУдаления = ЛОЖЬ";
	
	РезультатЗапросаУМ = ЗапросУМ.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапросаУМ.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//МассивМагазинов.Добавить(ВыборкаДетальныеЗаписи.ссылка);
		ВремИП = Лев(ВыборкаДетальныеЗаписи.IP, СтрДлина(ВыборкаДетальныеЗаписи.IP)-1)+ "%";
		ЗапросКасса.УстановитьПараметр("ИП", ВремИП);
		РезультатЗапросаКасса = ЗапросКасса.Выполнить();
		ВыборкаКассы = РезультатЗапросаКасса.Выбрать();
		Пока ВыборкаКассы.Следующий() Цикл
			МассивМагазинов.Добавить(ВыборкаКассы.Ссылка)
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНаличиеПутейБаз(Команда)
	Для каждого ТекущийИндекс Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Если БазыНайдены(Элементы.Список.ДанныеСтроки(ТекущийИндекс).Ссылка) = Истина Тогда
			Продолжить;
		КонецЕсли;		
		
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Список.Параметры.УстановитьЗначениеПараметра("Фастекс", Справочники.Расширения.НайтиПоНаименованию("Fastex"));
	Список.Параметры.УстановитьЗначениеПараметра("Дополнения", Справочники.Расширения.НайтиПоНаименованию("Дополнения"));
КонецПроцедуры
