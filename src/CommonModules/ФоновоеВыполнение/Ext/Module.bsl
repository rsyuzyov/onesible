#Область ФоновыеЗадания

Функция Запустить(ИмяМетода, Параметры, Ключ, Наименование) Экспорт

	Если НайтиАктивноеЗаданиеПоКлючу(Ключ) = Неопределено Тогда
		ФоновыеЗадания.Выполнить(ИмяМетода, Параметры, Ключ, Ключ);
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

Функция ОтменитьПоКлючу(Ключ) Экспорт

	ФоновоеЗадание = НайтиАктивноеЗаданиеПоКлючу(Ключ);
	Если НЕ ФоновоеЗадание = Неопределено Тогда
		ФоновоеЗадание.Отменить();
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

Функция ОтменитьПоИдентификатору(Ключ) Экспорт

	ФоновоеЗадание = НайтиАктивноеЗаданиеПоКлючу(Ключ);
	Если НЕ ФоновоеЗадание = Неопределено Тогда
		ФоновоеЗадание.Отменить();
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

Функция КлючЗадания(Знач Компьютер, Знач Роль, Знач Действие) Экспорт

	Роль = РегистрыСведений.РолиКомпьютеров.Роль(Роль);
	Возврат СтрШаблон("[%1.%2.%3]", Компьютер.Код, Роль.Наименование, Действие);

КонецФункции

Функция НайтиАктивноеЗаданиеПоДействию(Компьютер, Роль, Действие) Экспорт
	
	Возврат НайтиАктивноеЗаданиеПоКлючу(КлючЗадания(Компьютер, Роль, Действие));
	
КонецФункции

Функция НайтиАктивноеЗаданиеПоКлючу(Ключ) Экспорт 

	Задания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Ключ, Состояние", Ключ, СостояниеФоновогоЗадания.Активно));
	Для каждого Задание Из Задания Цикл
		Возврат Задание;
	КонецЦикла;
	
	Возврат Неопределено;

КонецФункции

Функция НайтиАктивноеЗаданиеПоИдентификатору(Идентификатор) Экспорт 

	Задания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("УникальныйИдентификатор, Состояние", Идентификатор, СостояниеФоновогоЗадания.Активно));
	Для каждого Задание Из Задания Цикл
		Возврат Задание;
	КонецЦикла;
	
	Возврат Неопределено;

КонецФункции

Функция ВыполнитьОперацию(Знач Компьютер, Знач Роль, Знач Операция, ПараметрыОперации = Неопределено) Экспорт

	РегистрыСведений.РолиКомпьютеров.ВыполнитьОперацию(Компьютер, Роль, Операция, ПараметрыОперации);

КонецФункции

#КонецОбласти

#Область РегламентныеЗадания

Процедура КонтрольВыполненияЗаданий() Экспорт
	
	// слишком долгие задания нужно прибить и записать ошибку
	Задания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Состояние", СостояниеФоновогоЗадания.Активно));
	Для каждого Задание Из Задания Цикл
		
	КонецЦикла;

	// По упавшим заданиям нужно проверить, зафиксировано ли последнее время выполнения и состояние поломки
	Задания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Состояние", СостояниеФоновогоЗадания.ЗавершеноАварийно));
	Для каждого Задание Из Задания Цикл
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПоискКомпьютеров() Экспорт

	

КонецПроцедуры

Процедура ПодключениеПульта() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 3
	               |	РолиКомпьютеров.Компьютер КАК Компьютер,
	               |	РолиКомпьютеров.ДатаОбновления КАК ДатаОбновления
	               |ИЗ
	               |	РегистрСведений.РолиКомпьютеров КАК РолиКомпьютеров
	               |ГДЕ
	               |	РолиКомпьютеров.Роль = &Роль
	               |	И РолиКомпьютеров.ДатаОбновления < &Дата
	               |	И НЕ РолиКомпьютеров.КодВозврата = 0
	               |	И НЕ РолиКомпьютеров.ВыполняетсяСейчас";
	Запрос.УстановитьПараметр("Дата", ТекущаяДата() - 3600*24);
	Запрос.УстановитьПараметр("Роль", Справочники.РолиКомпьютеров.Pult);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.РолиКомпьютеров.ЗапуститьУстановкуРоли(Выборка.Компьютер, Справочники.РолиКомпьютеров.Pult);
	КонецЦикла;

КонецПроцедуры

Процедура ПроверкаДоступностиСобственногоПульта() Экспорт
	
	
	
КонецПроцедуры

Процедура ВыполнениеОбменов() Экспорт
	
	ВыборкаПланы = Справочники.ПланыОбменов.Выбрать();
	Пока ВыборкаПланы.Следующий() Цикл
		Если  НЕ ВыборкаПланы.Включен ИЛИ ВыборкаПланы.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		
		МаксимальноеКоличествоЗаданий = ВыборкаПланы.КоличествоЗаданий;
		Если МаксимальноеКоличествоЗаданий = 0 Тогда
			об = ВыборкаПланы.ПолучитьОбъект();
			об.КоличествоЗаданий = 10;
			об.Записать();
			МаксимальноеКоличествоЗаданий = 10;
		КонецЕсли;
		АктивныхЗаданий = 0;
		АктивныеЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Метод, Состояние", "Фастекс.ВыполнитьОбмен", СостояниеФоновогоЗадания.Активно));
		Для каждого Задание Из АктивныеЗадания Цикл
			Если СтрНайти(Задание.Ключ, ВыборкаПланы.Наименование) > 0 Тогда
				АктивныхЗаданий = АктивныхЗаданий + 1;
			КонецЕсли;
		КонецЦикла;
		
		ЗаданийКЗапуску = МаксимальноеКоличествоЗаданий - АктивныхЗаданий;
		
		Если ЗаданийКЗапуску < 1 Тогда
			Продолжить;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 10
		               |	УзлыОбмена.ПланОбмена КАК ПланОбмена,
		               |	УзлыОбмена.Узел КАК Узел
		               |ИЗ
		               |	РегистрСведений.УзлыОбмена КАК УзлыОбмена
		               |ГДЕ
		               |	УзлыОбмена.ОбменОтложенДо <= &ТекущаяДата
		               |	И УзлыОбмена.ПланОбмена.ГлавныйУзел <> УзлыОбмена.Узел
		               |	И УзлыОбмена.ПланОбмена = &ПланОбмена
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	УзлыОбмена.ДатаВыгрузки";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "10", МаксимальноеКоличествоЗаданий * 5);
		Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
		Запрос.УстановитьПараметр("ПланОбмена", ВыборкаПланы.Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		СчетчикЗаданий = 0;
		Пока Выборка.Следующий() Цикл
			
			Ключ = "" + ВыборкаПланы.Наименование + "." + Выборка.Узел.Код + "." + "Выгрузка";
			Если НайтиАктивноеЗаданиеПоКлючу(Ключ) = Неопределено Тогда
				ПараметрыЗадания = Новый Массив;
				ПараметрыЗадания.Добавить(Выборка.ПланОбмена);
				ПараметрыЗадания.Добавить(Выборка.ПланОбмена.ГлавныйУзел);
				ПараметрыЗадания.Добавить(Выборка.Узел);
				ФоновыеЗадания.Выполнить("Фастекс.ВыполнитьОбмен", ПараметрыЗадания, Ключ);
				
				СчетчикЗаданий = СчетчикЗаданий + 1;
				
			КонецЕсли;
			
			Ключ = "" + ВыборкаПланы.Наименование + "." + Выборка.Узел.Код + "." + "Загрузка";
			Если НайтиАктивноеЗаданиеПоКлючу(Ключ) = Неопределено Тогда
				ПараметрыЗадания = Новый Массив;
				ПараметрыЗадания.Добавить(Выборка.ПланОбмена);
				ПараметрыЗадания.Добавить(Выборка.Узел);
				ПараметрыЗадания.Добавить(Выборка.ПланОбмена.ГлавныйУзел);
				ФоновыеЗадания.Выполнить("Фастекс.ВыполнитьОбмен", ПараметрыЗадания, Ключ);
				
				СчетчикЗаданий = СчетчикЗаданий + 1;
				
			КонецЕсли;
			
			Если СчетчикЗаданий >= ЗаданийКЗапуску Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыполнениеОбменовПоТипу(ИмяТипа, МаксимальноеКоличествоЗаданий = 5, РазмерПорции = 100) Экспорт
	
	АктивныхЗаданий = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Метод, Состояние", "Фастекс.ВыполнитьОбменПоТипу." + ИмяТипа, СостояниеФоновогоЗадания.Активно)).Количество();
	ЗаданийКЗапуску = МаксимальноеКоличествоЗаданий - АктивныхЗаданий;
	
	Если ЗаданийКЗапуску < 1 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 10
	               |	УзлыОбмена.ПланОбмена КАК ПланОбмена,
	               |	УзлыОбмена.Узел КАК Узел,
	               |	ЕСТЬNULL(ОбменыПоТипу.ДатаВыгрузки, &ПустаяДата) КАК ДатаВыгрузки
	               |ИЗ
	               |	РегистрСведений.УзлыОбмена КАК УзлыОбмена
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбменыПоТипу КАК ОбменыПоТипу
	               |		ПО УзлыОбмена.ПланОбмена = ОбменыПоТипу.ПланОбмена
	               |			И УзлыОбмена.Узел = ОбменыПоТипу.Узел
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаВыгрузки";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "10", ЗаданийКЗапуску * 2);
	Запрос.УстановитьПараметр("ПустаяДата", Дата('00010101'));
	Выборка = Запрос.Выполнить().Выбрать();
	СчетчикЗаданий = 0;
	Пока Выборка.Следующий() Цикл
		
		Ключ = "" + Выборка.Узел.Код + "." + "Выгрузка." + ИмяТипа;
		Если НайтиАктивноеЗаданиеПоКлючу(Ключ) = Неопределено Тогда
			ПараметрыЗадания = Новый Массив;
			ПараметрыЗадания.Добавить(Выборка.ПланОбмена);
			ПараметрыЗадания.Добавить(Выборка.ПланОбмена.ГлавныйУзел);
			ПараметрыЗадания.Добавить(Выборка.Узел);
			ПараметрыЗадания.Добавить(ИмяТипа);
			ФоновыеЗадания.Выполнить("Фастекс.ВыполнитьОбменПоВидуОбъектов", ПараметрыЗадания);
			
			Ключ = "" + Выборка.Узел.Код + "." + "Загрузка." + ИмяТипа;
			ПараметрыЗадания = Новый Массив;
			ПараметрыЗадания.Добавить(Выборка.ПланОбмена);
			ПараметрыЗадания.Добавить(Выборка.Узел);
			ПараметрыЗадания.Добавить(Выборка.ПланОбмена.ГлавныйУзел);
			ПараметрыЗадания.Добавить(ИмяТипа);
			ФоновыеЗадания.Выполнить("Фастекс.ВыполнитьОбменПоВидуОбъектов", ПараметрыЗадания);
		
			СчетчикЗаданий = СчетчикЗаданий + 1;
			
		КонецЕсли;
		
		Если СчетчикЗаданий >= ЗаданийКЗапуску Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаЛоговОбмена() Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти